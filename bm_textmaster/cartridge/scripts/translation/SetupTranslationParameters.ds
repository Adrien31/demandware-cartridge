/**
*	Reads translation parameters from previous form, build and generate a JSON
*
*	@input LocaleFrom: String
*	@input ItemType: String
*	@input LocaleTo: Object
*	@input Attributes: Object
*	@input Items: Object
*
*	@output TransParams: Object
*
*/

// API Includes
var CatalogMgr = require('dw/catalog/CatalogMgr');
	
// Lib Includes
var LogUtils = require('~/cartridge/scripts/utils/LogUtils'),
	Utils = require('~/cartridge/scripts/utils/Utils');

// Global variables
var log;

function execute( pdict : PipelineDictionary ) : Number {
	var localeFrom = pdict.LocaleFrom,
		localeTo = pdict.LocaleTo.toArray(),
		itemType = pdict.ItemType,
		attributes = pdict.Attributes.toArray(),
		items = pdict.Items.toArray(),
		localeFromName, locale, localeName, attribute, attr, count = 0;
	
	log = LogUtils.getLogger("setupTranslationParameters");
	localeFromName = Utils.getLocaleName(localeFrom);
	
	for each(locale in localeTo){
		localeName = Utils.getLocaleName(locale);
		localeTo[count] = {
			id: locale,
			name: localeName,
			templates: []
		};
		count++;
	}
	
	count = 0;
	for each(attribute in attributes){
		attr = attribute.split("|");
		attributes[count] = {
			id: attr[0],
			name: attr[1]
		};
		count++;
	}
	
	pdict.TransParams = {
		localeFrom: {
				id: localeFrom,
				name: localeFromName
			},
		localeTo: localeTo,
		itemType: itemType,
		attributes: attributes,
		items: items
	};
	
	return PIPELET_NEXT;
}
